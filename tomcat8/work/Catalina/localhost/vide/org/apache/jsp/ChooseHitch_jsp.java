/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.12
 * Generated at: 2018-10-18 09:53:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import hitchhike.*;
import utilities.Others;

public final class ChooseHitch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 RouteDAO routeDAO=new RouteDAO();
	ArrayList<Route> routes;
	Adresse origin;
	Adresse dest;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/Nav.jspf", Long.valueOf(1529544959962L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Choose your Hitch</title>\r\n");
      out.write("<script src='https://api.mapbox.com/mapbox.js/v3.0.1/mapbox.js'></script>\r\n");
      out.write("<link href='https://api.mapbox.com/mapbox.js/v3.0.1/mapbox.css'\r\n");
      out.write("\trel='stylesheet' />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("<style>\r\n");
      out.write("body{\r\n");
      out.write("\tbackground-image: url(\"./../../Ressources/auto-stop-homme.jpg\");\r\n");
      out.write("    background-repeat: no-repeat;\r\n");
      out.write("    background-size: cover;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\"\r\n");
      out.write("\tintegrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\"\r\n");
      out.write("\tcrossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark\">\r\n");
      out.write("  <a class=\"navbar-brand\" href=\"Index.jsp\">\r\n");
      out.write("    <img src=\"./../../Ressources/Logo.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\r\n");
      out.write("    HitchHike\r\n");
      out.write("  </a>\r\n");
      out.write("  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("    <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("  </button>\r\n");
      out.write("  ");
String login=null;
	String textLien;
	Boolean logged=(Boolean)session.getAttribute( "logged" );
  
      out.write("\r\n");
      out.write("  <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n");
      out.write("    <ul class=\"navbar-nav mr-auto\">\r\n");
      out.write("      <li class=\"nav-item active\">\r\n");
      out.write("        <a class=\"nav-link\" href=\"Index.jsp\">Home</a>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"nav-item\">\r\n");
      out.write("        <a class=\"nav-link\" href=\"Redirect.jsp?url=YourRoute.jsp&lead=false\">HitchHike</a>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"nav-item\">\r\n");
      out.write("        <a class=\"nav-link\" href=\"Redirect.jsp?url=YourRoute.jsp&lead=true\">Lead Someone</a>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"nav-item dropdown\">\r\n");
      out.write("        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown1\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("          Others\r\n");
      out.write("        </a>\r\n");
      out.write("        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown1\">\r\n");
      out.write("          <a class=\"dropdown-item\" href=\"Redirect.jsp?url=ChooseHitch.jsp\">Everyone</a>\r\n");
      out.write("          <div class=\"dropdown-divider\"></div>\r\n");
      out.write("          <a class=\"dropdown-item\" href=\"Redirect.jsp?url=ChooseHitch.jsp\">See map</a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </li>\r\n");
      out.write("\t");

		if(logged==null || !logged){
			textLien="<a href=\"Login.jsp\">Log in/register</a>";
		}else{
			login=(String)session.getAttribute( "login" );
			textLien=login+" (<a href=\"Logout.jsp\">Log out</a>)";
		}
	
      out.write("\r\n");
      out.write("      ");
if(logged!= null && logged){ 
      out.write("\r\n");
      out.write("      <li class=\"nav-item dropdown\">\r\n");
      out.write("        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("          Account\r\n");
      out.write("        </a>\r\n");
      out.write("        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n");
      out.write("          <a class=\"dropdown-item\" href=\"RouteList.jsp\">My routes</a>\r\n");
      out.write("          <a class=\"dropdown-item\" href=\"Messages.jsp\" id=\"itemMessage\">Messages</a>\r\n");
      out.write("          <div class=\"dropdown-divider\"></div>\r\n");
      out.write("          <a class=\"dropdown-item\" href=\"InfoUser.jsp?login=");
      out.print(login);
      out.write("\">My informations</a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </li>\r\n");
      out.write("      ");
} 
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("    <span class=\"navbar-text\">\r\n");
      out.write("\t");
      out.print( textLien );
      out.write("\r\n");
      out.write("    </span>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js\" integrity=\"sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js\" integrity=\"sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
if(logged!=null && logged) {
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t$(document).ready(checkForNotifications);\r\n");
      out.write("\tsetInterval(checkForNotifications, 5000);\r\n");
      out.write("\t\r\n");
      out.write("\tfunction checkForNotifications(){\r\n");
      out.write("\t    $.ajax({\r\n");
      out.write("\t        url: \"ReqAjax.jsp\", \r\n");
      out.write("\t        type: \"GET\",\r\n");
      out.write("\t        success: function( notification ) {\r\n");
      out.write("\t        \tvar tmp=notification.charAt(0);\r\n");
      out.write("\t        \tif(tmp=='0'){\r\n");
      out.write("\t\t            document.getElementById(\"navbarDropdown\").innerHTML=\"Account \";\r\n");
      out.write("\t\t            document.getElementById(\"itemMessage\").innerHTML=\"Messages \";\r\n");
      out.write("\t        \t}else{\r\n");
      out.write("\t\t            document.getElementById(\"navbarDropdown\").innerHTML=\"Account (\"+tmp+\")\";        \t\t\r\n");
      out.write("\t\t            document.getElementById(\"itemMessage\").innerHTML=\"Messages (\"+tmp+\")\";        \t\t\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t        },\r\n");
      out.write("\t        error: function(data){\r\n");
      out.write("\t            //handle any error \r\n");
      out.write("\t        }\r\n");
      out.write("\t    });\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
} 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\t<div id='map-popups' class=\"m-2\"\r\n");
      out.write("\t\tstyle=\"height: 92%; width: 99%; position: absolute;\"></div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');

	
	String stringOrigin=request.getParameter("inputOrigin");
	String stringDestination=request.getParameter("inputDestination");
	if(stringOrigin==null || stringDestination==null){
		session.removeAttribute("routeLead");
		origin=null;
		dest=null;
		routes=routeDAO.findAllWaiting();		
	}else{
		origin=new Adresse(stringOrigin);
		dest=new Adresse(stringDestination);
		boolean genOrigin=origin.generateAdresse();
		boolean genDest=dest.generateAdresse();
		if(!genOrigin || !genDest){
			String url="YourRoute.jsp?origin="+origin.getAdresseEbauche()+"&destination="+dest.getAdresseEbauche()+"&error=Adresse";
			if(!genOrigin){
				url+="1";
			}
			if(!genDest){
				url+="2";
			}
			response.sendRedirect(url);
		}else{
			double coef=Others.Distance(origin.getCoordX(), origin.getCoordY(), dest.getCoordX(), dest.getCoordY())/10;
			double xMin=0;
			double xMax=0;
			double yMin=0;
			double yMax=0;
			if(origin.getCoordX()<=dest.getCoordX()){
				xMin=origin.getCoordX()-coef;
				xMax=dest.getCoordX()+coef;
			}else{
				xMin=dest.getCoordX()-coef;
				xMax=origin.getCoordX()+coef;
			}
			if(origin.getCoordY()<=dest.getCoordY()){
				yMin=origin.getCoordY()-coef;
				yMax=dest.getCoordY()+coef;
			}else{
				yMin=dest.getCoordY()-coef;
				yMax=origin.getCoordY()+coef;
			}
			routes=routeDAO.findWaitingBetweenCoord(xMin, xMax, yMin, yMax);
			Route routeLead=new Route(null, origin, dest, null);
			session.setAttribute("routeLead", routeLead);
		}
	}

      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("L.mapbox.accessToken = 'pk.eyJ1Ijoic2lsdmVyYjAwIiwiYSI6ImNqZ3k2ZXB2NjI3N2syd21hYjJxdTgwZGMifQ.GwKMZ3MjtnPoLmuRR22SPQ';\r\n");
      out.write("var mapPopups = L.mapbox.map('map-popups', 'mapbox.light');\r\n");
      out.write("var myLayer = L.mapbox.featureLayer().addTo(mapPopups);\r\n");
      out.write("\r\n");
      out.write("var geojson = [\r\n");
      out.write("\t");
if(origin!=null && dest!=null){
      out.write("\r\n");
      out.write("\t{\r\n");
      out.write("\t    type: 'Feature',\r\n");
      out.write("\t    geometry: {\r\n");
      out.write("\t      type: 'Point',\r\n");
      out.write("\t      coordinates: [");
      out.print(origin.getCoordReversed());
      out.write("]\r\n");
      out.write("\t    },\r\n");
      out.write("\t    properties: {\r\n");
      out.write("\t      title: 'Departure',\r\n");
      out.write("\t      description: \"<b>Origin</b>: ");
      out.print(origin.getAdresse());
      out.write("\",\r\n");
      out.write("\t      'marker-color': '#FF0000'\r\n");
      out.write("\t    }\r\n");
      out.write(" \t },{\r\n");
      out.write("\t    type: 'Feature',\r\n");
      out.write("\t    geometry: {\r\n");
      out.write("\t      type: 'Point',\r\n");
      out.write("\t      coordinates: [");
      out.print(dest.getCoordReversed());
      out.write("]\r\n");
      out.write("\t    },\r\n");
      out.write("\t    properties: {\r\n");
      out.write("\t      title: 'Arrival',\r\n");
      out.write("\t      description: \"<b>Destination</b>: ");
      out.print(dest.getAdresse());
      out.write("\",\r\n");
      out.write("\t      'marker-color': '#00FF00'\r\n");
      out.write("\t    }\r\n");
      out.write(" \t },\r\n");
      out.write("   \t");
}
	for(Route r: routes){ 
      out.write("\r\n");
      out.write("\t{\r\n");
      out.write("\t    type: 'Feature',\r\n");
      out.write("\t    geometry: {\r\n");
      out.write("\t      type: 'Point',\r\n");
      out.write("\t      coordinates: [");
      out.print(r.getCoordReversedOrigin());
      out.write("]\r\n");
      out.write("\t    },\r\n");
      out.write("\t    properties: {\r\n");
      out.write("\t      title: '");
      out.print(r.getLogin());
      out.write("',\r\n");
      out.write("\t      description: \"<b>Origin</b>: ");
      out.print(r.getAdresseOrigin());
      out.write("<br>\"+\r\n");
      out.write("\t      \"<b>Destination</b>: ");
      out.print(r.getAdresseDestination());
      out.write("<br>\"+\r\n");
      out.write("\t      \"<b>Number of persons</b>: ");
      out.print(r.getNbrPers());
      out.write("<br>\"+\r\n");
      out.write("\t      \"<a href='http://localhost:8080/vide/YourLead.jsp?rno=");
      out.print(r.getRno());
      out.write("'>See Route</a>\",\r\n");
      out.write("\t      'marker-color': '#3bb2d0'\r\n");
      out.write("\t    }\r\n");
      out.write("  },\r\n");
      out.write("  ");
}
      out.write("\r\n");
      out.write("  ];\r\n");
      out.write("  myLayer.setGeoJSON(geojson);\r\n");
      out.write("  mapPopups.fitBounds([\r\n");
      out.write("  ");
if (origin != null && dest != null) {
      out.write("\r\n");
      out.write("\t[");
      out.print(origin.getCoord());
      out.write(']');
      out.write(',');
      out.write('[');
      out.print(dest.getCoord());
      out.write("],  \r\n");
      out.write("\t  \r\n");
      out.write("  ");
}
			for (Route r : routes) {
      out.write("\r\n");
      out.write("  [\r\n");
      out.write("\t\t");
      out.print(r.getCoordOrigin());
      out.write("\r\n");
      out.write("  ],\r\n");
      out.write("  ");
}
      out.write("\r\n");
      out.write("  ]);\r\n");
      out.write("  \r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
